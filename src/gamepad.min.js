Blockly.Gamepad=class{constructor(e){e=e||{},this.worker=new Blockly.Gamepad.Worker,this.blocklyManager=new Blockly.Gamepad.BlocklyManager(e),!0===e.magicJson&&(this.jsonManager=new Blockly.Gamepad.JsonManager,Object.defineProperty(this,"json",{get:function(){return this.jsonManager.json},set:function(e){this.jsonManager.init(e)}})),this.state=Blockly.Gamepad.STATES.STARTED,this.blocklyManager.resize(),this.blocklyManager.reset(),this.worker.onRequest(this,this.manage)}manage(e,t,r){void 0!==e.id?this.blocklyManager.setHighlight(e.id):this.blocklyManager.removeHighlight(),this.jsonManager&&(e.method!=Blockly.Gamepad.STATES.STARTED||this.state!=Blockly.Gamepad.STATES.FINISHED&&this.state!=Blockly.Gamepad.STATES.COMPLETED||t||this.jsonManager.loadNext(),e.method!=Blockly.Gamepad.STATES.FINISHED&&e.method!=Blockly.Gamepad.STATES.COMPLETED||this.state!=Blockly.Gamepad.STATES.STARTED||!t||this.jsonManager.loadPrior(),r&&(t?this.jsonManager.unloadChanges():this.jsonManager.loadChanges())),e.method!=Blockly.Gamepad.STATES.STARTED&&e.method!=Blockly.Gamepad.STATES.FINISHED&&e.method!=Blockly.Gamepad.STATES.COMPLETED||(this.state=e.method);let o=this.game(e,t,r);return this.jsonManager&&!r&&this.jsonManager.commit(),o}setGame(e,t){if("function"!=typeof t)throw new Error("method is not a function");this.game=function(){return t.apply(e,[...arguments])}}load(e){if(this.state=Blockly.Gamepad.STATES.STARTED,null!=e&&(isNaN(e)||e<1))throw new Error("times must be a number greater than 0.");e=e||1,this.worker.reset();let t=this.blocklyManager.code(e);return this.jsonManager&&this.jsonManager.reset(),Blockly.Gamepad.evalContext(t,this.worker.getIstance()),this.blocklyManager.getBlocksNumber()}reset(){this.jsonManager&&this.jsonManager.reset(),this.worker.reset(),this.blocklyManager.reset()}setToolbox(e){this.blocklyManager.toolbox(e)}forward(){return this.worker.stop(),this.worker.go(!1,!1)}backward(){return this.worker.stop(),this.worker.go(!0,!1)}play(){this.worker.start()}pause(){this.worker.stop()}save(e){this.blocklyManager.save(e)}restore(e){this.blocklyManager.restore(e)}clear(){this.blocklyManager.clear()}},Blockly.Gamepad.SYMBOL=Symbol("gamepad.js"),Blockly.Gamepad.ERRORS={CLOSED:"closed"},Blockly.Gamepad.STATES={FINISHED:"FINISHED",COMPLETED:"COMPLETED",STARTED:"STARTED",FUNCTION_CALL:"FUNCTION_CALL"},Blockly.Gamepad.BLOCKS={START:"start"},Blockly.Gamepad.TEMPLATES={WHILE:Symbol("while"),DO_WHILE:Symbol("do_while"),IF:Symbol("if"),IF_ELSE:Symbol("if_else")},Blockly.Gamepad.setting=function(){Blockly.Trashcan.prototype.clear=function(){this.contents_=new Array},Blockly.Scrollbar.scrollbarThickness=12,Blockly.JavaScript.procedures_defreturn=function(e){let t="{method: Blockly.Gamepad['STATES']['FUNCTION_CALL'],args: [],"+("id: '"+e.id+"'")+"}";var r=Blockly.JavaScript.variableDB_.getName(e.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),o=Blockly.JavaScript.statementToCode(e,"STACK");if(Blockly.JavaScript.STATEMENT_PREFIX){var s=e.id.replace(/\$/g,"$$$$");o=Blockly.JavaScript.prefixLines(Blockly.JavaScript.STATEMENT_PREFIX.replace(/%1/g,"'"+s+"'"),Blockly.JavaScript.INDENT)+o}Blockly.JavaScript.INFINITE_LOOP_TRAP&&(o=Blockly.JavaScript.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+e.id+"'")+o),(s=Blockly.JavaScript.valueToCode(e,"RETURN",Blockly.JavaScript.ORDER_NONE)||"")&&(s=Blockly.JavaScript.INDENT+"return resolve("+s+");\n");for(var a=[],l=0;l<e.arguments_.length;l++)a[l]=Blockly.JavaScript.variableDB_.getName(e.arguments_[l],Blockly.Variables.NAME_TYPE);return o="function "+r+"("+a.join(", ")+") {\n   return new Promise(async function(resolve, reject){\n       await worker.setRequest("+t+");\n"+o+s+"\n       resolve();\n   });\n}",o=Blockly.JavaScript.scrub_(e,o),Blockly.JavaScript.definitions_["%"+r]=o,null},Blockly.JavaScript.procedures_defnoreturn=Blockly.JavaScript.procedures_defreturn,Blockly.JavaScript.procedures_callreturn=function(e){for(var t=Blockly.JavaScript.variableDB_.getName(e.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),r=[],o=0;o<e.arguments_.length;o++)r[o]=Blockly.JavaScript.valueToCode(e,"ARG"+o,Blockly.JavaScript.ORDER_COMMA)||"null";return["await "+t+"("+r.join(", ")+")",Blockly.JavaScript.ORDER_FUNCTION_CALL]},Blockly.JavaScript.procedures_callnoreturn=function(e){for(var t=Blockly.JavaScript.variableDB_.getName(e.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),r=[],o=0;o<e.arguments_.length;o++)r[o]=Blockly.JavaScript.valueToCode(e,"ARG"+o,Blockly.JavaScript.ORDER_COMMA)||"null";return"await "+t+"("+r.join(", ")+");\n"},Blockly.JavaScript.procedures_ifreturn=function(e){var t="if ("+(Blockly.JavaScript.valueToCode(e,"CONDITION",Blockly.JavaScript.ORDER_NONE)||"false")+") {\n";return e.hasReturnValue_?(e=Blockly.JavaScript.valueToCode(e,"VALUE",Blockly.JavaScript.ORDER_NONE)||"null",t+=Blockly.JavaScript.INDENT+"return resolve("+e+");\n"):t+=Blockly.JavaScript.INDENT+"return resolve();\n",t+"}\n"},Blockly.JavaScript[Blockly.Gamepad.BLOCKS.START]=function(){return""},Blockly.JavaScript.addReservedWords("CONTEXT,worker,code,reject,resolve"),Blockly.defineBlocksWithJsonArray([{type:Blockly.Gamepad.BLOCKS.START,message0:"Start",deletable_:!1,lastDummyAlign0:"CENTRE",nextStatement:null,style:"hat_blocks",tooltip:"",helpUrl:""}])},Blockly.Gamepad.init=function(e){if(null==e)throw new Error("options must not be undefined");if(e.hasOwnProperty("inputs")&&(this.INPUTS=e.inputs),e.hasOwnProperty("toolbox")&&(this.TOOLBOX=Blockly.Gamepad.utils.xml2json(e.toolbox,"")),e.hasOwnProperty("context")&&(this.CONTEXT=e.context),e.hasOwnProperty("blocks")){let t=[];for(let r in e.blocks){let o=e.blocks[r],s=!1,a=!1;if("statements"in o){if(!Array.isArray(o.statements)||0==o.statements.length)throw new Error("statements must be an array of string");s=!0}if("template"in o){if(!Object.values(Blockly.Gamepad.TEMPLATES).includes(o.template))throw new Error("template must be one of Blockly.Gamepad['TEMPLATES']");a=!0}if(a&&!s)throw new Error("a template block require at least a statement");if(!a&&s)throw new Error("statements setted without the temaplate");Blockly.JavaScript[""+r]=Blockly.Gamepad.utils.to(o.method,o.args,o.order,o.template,o.statements),"json"in o?(o.json.type=r,t.push(o.json)):"javascript"in o&&(Blockly.Blocks[r]=o.javascript)}Blockly.defineBlocksWithJsonArray(t)}},Blockly.Gamepad.observer={INSERT:"insert",UPDATE:"update",DELETE:"delete",POP:"pop",PUSH:"push",SHIFT:"shift",UNSHIFT:"unshift",REVERSE:"reverse",nonObservables:{Date:!0,Blob:!0,Number:!0,String:!0,Boolean:!0,Error:!0,SyntaxError:!0,TypeError:!0,URIError:!0,Function:!0,Promise:!0,RegExp:!0},observableDefinition:{revoke:{value:function(){this[Blockly.Gamepad.SYMBOL].revoke()}},observe:{value:function(e,t){let r=this[Blockly.Gamepad.SYMBOL].observers;if("function"!=typeof e)throw new Error("observer parameter MUST be a function");r.has(e)||r.set(e,Object.assign({},t))}},unobserve:{value:function(){let e,t=this[Blockly.Gamepad.SYMBOL].observers;if(t.size)if(e=arguments.length)for(;e--;)t.delete(arguments[e]);else t.clear()}}},prepareArray:function(e,t){let r,o=e.length,s=new Array(e.length);for(s[Blockly.Gamepad.SYMBOL]=t;o--;)(r=e[o])&&"object"==typeof r&&!Blockly.Gamepad.observer.nonObservables.hasOwnProperty(r.constructor.name)?s[o]=Array.isArray(r)?new Blockly.Gamepad.observer.ArrayObserver({target:r,ownKey:o,parent:t}).proxy:new Blockly.Gamepad.observer.ObjectObserver({target:r,ownKey:o,parent:t}).proxy:s[o]=r;return s},prepareObject:function(e,t){let r,o,s=Object.keys(e),a=s.length,l={[Blockly.Gamepad.SYMBOL]:t};for(;a--;)(o=e[r=s[a]])&&"object"==typeof o&&!Blockly.Gamepad.observer.nonObservables.hasOwnProperty(o.constructor.name)?l[r]=Array.isArray(o)?new Blockly.Gamepad.observer.ArrayObserver({target:o,ownKey:r,parent:t}).proxy:new Blockly.Gamepad.observer.ObjectObserver({target:o,ownKey:r,parent:t}).proxy:l[r]=o;return l},callObservers:function(e,t){for(let r of e.keys())try{r(t)}catch(e){console.error("failed to deliver changes to listener "+r,e)}},getAncestorInfo:function(e){let t,r=[],o=0,s=0;if(!e.isRevoked){for(;e.parent;)if(r[o++]=e.ownKey,(e=e.parent).isRevoked)return;for(t=new Array(o);o--;)t[s++]=r[o];return{observers:e.observers,path:t}}}},Blockly.Gamepad.observer.Observer=class{constructor(e,t){let r=t(e.target,this);null===e.parent?(this.isRevoked=!1,Object.defineProperty(this,"observers",{value:new Map}),Object.defineProperties(r,Blockly.Gamepad.observer.observableDefinition)):(this.parent=e.parent,this.ownKey=e.ownKey),this.revokable=Proxy.revocable(r,this),this.proxy=this.revokable.proxy,this.target=r}set(e,t,r){if(this.isRevoked)return e[t]=r,!0;let o,s,a,l=e[t];if(o=r&&"object"==typeof r&&!Blockly.Gamepad.observer.nonObservables.hasOwnProperty(r.constructor.name)?Array.isArray(r)?new Blockly.Gamepad.observer.ArrayObserver({target:r,ownKey:t,parent:this}).proxy:new Blockly.Gamepad.observer.ObjectObserver({target:r,ownKey:t,parent:this}).proxy:r,e[t]=o,l&&"object"==typeof l){let e=l[Blockly.Gamepad.SYMBOL];e&&(l=e.revoke())}return(s=Blockly.Gamepad.observer.getAncestorInfo(this))?(s.observers.size&&(s.path.push(t),a=void 0===l?[{type:Blockly.Gamepad.observer.INSERT,path:s.path,value:o,object:this.proxy}]:[{type:Blockly.Gamepad.observer.UPDATE,path:s.path,value:o,oldValue:l,object:this.proxy}],Blockly.Gamepad.observer.callObservers(s.observers,a)),!0):void 0}deleteProperty(e,t){let r,o,s=e[t];if(delete e[t]){if(s&&"object"==typeof s){let e=s[Blockly.Gamepad.SYMBOL];e&&(s=e.revoke())}if(!(r=Blockly.Gamepad.observer.getAncestorInfo(this)))return;return r.observers.size&&(r.path.push(t),o=[{type:Blockly.Gamepad.observer.DELETE,path:r.path,oldValue:s,object:this.proxy}],Blockly.Gamepad.observer.callObservers(r.observers,o)),!0}return!1}},Blockly.Gamepad.observer.ArrayObserver=class extends Blockly.Gamepad.observer.Observer{constructor(e){super(e,Blockly.Gamepad.observer.prepareArray)}revoke(){this.isRevoked=!0;let e,t=this.target,r=t.length;for(;r--;)if((e=t[r])&&"object"==typeof e){let o=e[Blockly.Gamepad.SYMBOL];o&&(t[r]=o.revoke())}return t}get(e,t){const r={pop:function(e,t){if(0==e.length)return;let r;if((r=e.pop())&&"object"==typeof r){let e=r[Blockly.Gamepad.SYMBOL];e&&(r=e.revoke())}let o=Blockly.Gamepad.observer.getAncestorInfo(t);return o?(o.observers.size&&Blockly.Gamepad.observer.callObservers(o.observers,[{type:Blockly.Gamepad.observer.POP,path:o.path,oldValue:r,object:t.proxy}]),r):void 0},push:function(e,t){let r,o,s,a,l,n=arguments.length-2,i=new Array(n),c=Blockly.Gamepad.observer.getAncestorInfo(t);for(l=e.length,r=0;r<n;r++)(o=arguments[r+2])&&"object"==typeof o&&!Blockly.Gamepad.observer.nonObservables.hasOwnProperty(o.constructor.name)&&(o=Array.isArray(o)?new Blockly.Gamepad.observer.ArrayObserver({target:o,ownKey:l+r,parent:t}).proxy:new Blockly.Gamepad.observer.ObjectObserver({target:o,ownKey:l+r,parent:t}).proxy),i[r]=o;if(s=Reflect.apply(e.push,e,i),c)return c.observers.size&&(a=[{type:Blockly.Gamepad.observer.PUSH,path:c.path,value:i,object:t.proxy}],Blockly.Gamepad.observer.callObservers(c.observers,a)),s},shift:function(e,t){if(0==e.length)return;let r,o,s,a,l,n;if((r=e.shift())&&"object"==typeof r){let e=r[Blockly.Gamepad.SYMBOL];e&&(r=e.revoke())}for(o=0,s=e.length;o<s;o++)if((a=e[o])&&"object"==typeof a){let e=a[Blockly.Gamepad.SYMBOL];e&&(e.ownKey=o)}return(l=Blockly.Gamepad.observer.getAncestorInfo(t))?(l.observers.size&&(n=[{type:Blockly.Gamepad.observer.SHIFT,path:l.path,oldValue:r,object:t.proxy}],Blockly.Gamepad.observer.callObservers(l.observers,n)),r):void 0},unshift:function(e,t){let r,o,s,a;(r=Array.from(arguments)).splice(0,2),r.forEach((e,o)=>{e&&"object"==typeof e&&!Blockly.Gamepad.observer.nonObservables.hasOwnProperty(e.constructor.name)&&(r[o]=Array.isArray(e)?new Blockly.Gamepad.observer.ArrayObserver({target:e,ownKey:o,parent:t}).proxy:new Blockly.Gamepad.observer.ObjectObserver({target:e,ownKey:o,parent:t}).proxy)}),o=Reflect.apply(e.unshift,e,r);for(let t,r=0,o=e.length;r<o;r++)if((t=e[r])&&"object"==typeof t){let e=t[Blockly.Gamepad.SYMBOL];e&&(e.ownKey=r)}if(s=Blockly.Gamepad.observer.getAncestorInfo(t))return s.observers.size&&(a=[{type:Blockly.Gamepad.observer.UNSHIFT,path:s.path,value:r,object:t.proxy}],Blockly.Gamepad.observer.callObservers(s.observers,a)),o},reverse:function(e,t){let r,o,s,a,l;for(e.reverse(),r=0,o=e.length;r<o;r++)if((s=e[r])&&"object"==typeof s){let e=s[Blockly.Gamepad.SYMBOL];e&&(e.ownKey=r)}return(a=Blockly.Gamepad.observer.getAncestorInfo(t)).observers.size&&(l=[{type:Blockly.Gamepad.observer.REVERSE,path:a.path,object:t.proxy}],Blockly.Gamepad.observer.callObservers(a.observers,l)),t.proxy},sort:function(e,t,r){let o,s,a,l,n,i=e.slice(0);for(e.sort(r),o=0,s=e.length;o<s;o++)if((a=e[o])&&"object"==typeof a){let e=a[Blockly.Gamepad.SYMBOL];e&&(e.ownKey=o)}return(l=Blockly.Gamepad.observer.getAncestorInfo(t)).observers.size&&(n=[{type:Blockly.Gamepad.observer.UPDATE,value:e,oldValue:i,path:l.path,object:t.proxy}],Blockly.Gamepad.observer.callObservers(l.observers,n)),t.proxy},fill:function(e,t){let r,o,s,a,l,n,i=Blockly.Gamepad.observer.getAncestorInfo(t),c=[],p=e.length;(r=Array.from(arguments)).splice(0,2),s=(o=r.length)<2?0:r[1]<0?p+r[1]:r[1],a=o<3?p:r[2]<0?p+r[2]:r[2],l=e.slice(0),Reflect.apply(e.fill,e,r);for(let r,o,p=s;p<a;p++)if((r=e[p])&&"object"==typeof r&&!Blockly.Gamepad.observer.nonObservables.hasOwnProperty(r.constructor.name)&&(e[p]=Array.isArray(r)?new Blockly.Gamepad.observer.ArrayObserver({target:r,ownKey:p,parent:t}).proxy:new Blockly.Gamepad.observer.ObjectObserver({target:r,ownKey:p,parent:t}).proxy),l.hasOwnProperty(p)){if((o=l[p])&&"object"==typeof o){let e=o[Blockly.Gamepad.SYMBOL];e&&(o=e.revoke())}(n=i.path.slice(0)).push(p),c.push({type:Blockly.Gamepad.observer.UPDATE,path:n,value:e[p],oldValue:o,object:t.proxy})}else(n=i.path.slice(0)).push(p),c.push({type:Blockly.Gamepad.observer.INSERT,path:n,value:e[p],object:t.proxy});if(i)return i.observers.size&&Blockly.Gamepad.observer.callObservers(i.observers,c),t.proxy},splice:function(e,t){let r,o,s,a,l,n,i,c,p,h,y=Blockly.Gamepad.observer.getAncestorInfo(t),u=[],d=e.length;(r=Array.from(arguments)).splice(0,2),i=r.length;for(let e,o=2;o<i;o++)(e=r[o])&&"object"==typeof e&&!Blockly.Gamepad.observer.nonObservables.hasOwnProperty(e.constructor.name)&&(r[o]=Array.isArray(e)?new Blockly.Gamepad.observer.ArrayObserver({target:e,ownKey:o,parent:t}).proxy:new Blockly.Gamepad.observer.ObjectObserver({target:e,ownKey:o,parent:t}).proxy);a=0===i?0:r[0]<0?d+r[0]:r[0],l=i<2?d-a:r[1],n=Math.max(i-2,0),o=Reflect.apply(e.splice,e,r),d=e.length;for(let t,r=0;r<d;r++)(t=e[r])&&"object"==typeof t&&(s=t[Blockly.Gamepad.SYMBOL])&&(s.ownKey=r);for(c=0,p=o.length;c<p;c++)(h=o[c])&&"object"==typeof h&&(s=h[Blockly.Gamepad.SYMBOL])&&(o[c]=s.revoke());if(y){if(y.observers.size){let r,s;for(r=0;r<l;r++)(s=y.path.slice(0)).push(a+r),r<n?u.push({type:Blockly.Gamepad.observer.UPDATE,path:s,value:e[a+r],oldValue:o[r],object:t.proxy}):u.push({type:Blockly.Gamepad.observer.DELETE,path:s,oldValue:o[r],object:t.proxy});for(;r<n;r++)(s=y.path.slice(0)).push(a+r),u.push({type:Blockly.Gamepad.observer.INSERT,path:s,value:e[a+r],object:t.proxy});Blockly.Gamepad.observer.callObservers(y.observers,u)}return o}}};return r.hasOwnProperty(t)?r[t].bind(void 0,e,this):e[t]}},Blockly.Gamepad.observer.ObjectObserver=class extends Blockly.Gamepad.observer.Observer{constructor(e){super(e,Blockly.Gamepad.observer.prepareObject)}revoke(){this.isRevoked=!0;let e,t,r=this.target,o=Object.keys(r),s=o.length;for(;s--;)if((t=r[e=o[s]])&&"object"==typeof t){let o=t[Blockly.Gamepad.SYMBOL];o&&(r[e]=o.revoke())}return r}},Blockly.Gamepad.utils={xml2json:function(e,t){var r={toObj:function(e){var t={};if(1==e.nodeType){if(e.attributes.length)for(var o=0;o<e.attributes.length;o++)t["@"+e.attributes[o].nodeName]=(e.attributes[o].nodeValue||"").toString();if(e.firstChild){for(var s=0,a=0,l=!1,n=e.firstChild;n;n=n.nextSibling)1==n.nodeType?l=!0:3==n.nodeType&&n.nodeValue.match(/[^ \f\n\r\t\v]/)?s++:4==n.nodeType&&a++;if(l)if(s<2&&a<2){r.removeWhite(e);for(n=e.firstChild;n;n=n.nextSibling)3==n.nodeType?t["#text"]=r.escape(n.nodeValue):4==n.nodeType?t["#cdata"]=r.escape(n.nodeValue):t[n.nodeName]?t[n.nodeName]instanceof Array?t[n.nodeName][t[n.nodeName].length]=r.toObj(n):t[n.nodeName]=[t[n.nodeName],r.toObj(n)]:t[n.nodeName]=r.toObj(n)}else e.attributes.length?t["#text"]=r.escape(r.innerXml(e)):t=r.escape(r.innerXml(e));else if(s)e.attributes.length?t["#text"]=r.escape(r.innerXml(e)):t=r.escape(r.innerXml(e));else if(a)if(a>1)t=r.escape(r.innerXml(e));else for(n=e.firstChild;n;n=n.nextSibling)t["#cdata"]=r.escape(n.nodeValue)}e.attributes.length||e.firstChild||(t=null)}else 9==e.nodeType&&(t=r.toObj(e.documentElement));return t},toJson:function(e,t,o){var s=t?'"'+t+'"':"";if(e instanceof Array){for(var a=0,l=e.length;a<l;a++)e[a]=r.toJson(e[a],"",o+"\t");s+=(t?":[":"[")+(e.length>1?"\n"+o+"\t"+e.join(",\n"+o+"\t")+"\n"+o:e.join(""))+"]"}else if(null==e)s+=(t&&":")+"null";else if("object"==typeof e){var n=[];for(var i in e)n[n.length]=r.toJson(e[i],i,o+"\t");s+=(t?":{":"{")+(n.length>1?"\n"+o+"\t"+n.join(",\n"+o+"\t")+"\n"+o:n.join(""))+"}"}else s+="string"==typeof e?(t&&":")+'"'+e.toString()+'"':(t&&":")+e.toString();return s},innerXml:function(e){var t="";if("innerHTML"in e)t=e.innerHTML;else for(var r=function(e){var t="";if(1==e.nodeType){t+="<"+e.nodeName;for(var o=0;o<e.attributes.length;o++)t+=" "+e.attributes[o].nodeName+'="'+(e.attributes[o].nodeValue||"").toString()+'"';if(e.firstChild){t+=">";for(var s=e.firstChild;s;s=s.nextSibling)t+=r(s);t+="</"+e.nodeName+">"}else t+="/>"}else 3==e.nodeType?t+=e.nodeValue:4==e.nodeType&&(t+="<![CDATA["+e.nodeValue+"]]>");return t},o=e.firstChild;o;o=o.nextSibling)t+=r(o);return t},escape:function(e){return e.replace(/[\\]/g,"\\\\").replace(/[\"]/g,'\\"').replace(/[\n]/g,"\\n").replace(/[\r]/g,"\\r")},removeWhite:function(e){e.normalize();for(var t=e.firstChild;t;)if(3==t.nodeType)if(t.nodeValue.match(/[^ \f\n\r\t\v]/))t=t.nextSibling;else{var o=t.nextSibling;e.removeChild(t),t=o}else 1==t.nodeType?(r.removeWhite(t),t=t.nextSibling):t=t.nextSibling;return e}};9==e.nodeType&&(e=e.documentElement);var o=r.toJson(r.toObj(r.removeWhite(e)),e.nodeName,"\t");return"{\n"+t+(t?o.replace(/\t/g,t):o.replace(/\t|\n/g,""))+"\n}"},json2xml:function(e,t){var r=function(e,t,o){var s="";if(e instanceof Array)for(var a=0,l=e.length;a<l;a++)s+=o+r(e[a],t,o+"\t")+"\n";else if("object"==typeof e){var n=!1;for(var i in s+=o+"<"+t.toLowerCase(),e)"@"==i.charAt(0)?s+=" "+i.substr(1)+'="'+e[i].toString()+'"':n=!0;if(s+=n?">":"/>",n){for(var i in e)"#text"==i?s+=e[i]:"#cdata"==i?s+="<![CDATA["+e[i]+"]]>":"@"!=i.charAt(0)&&(s+=r(e[i],i,o+"\t"));s+=("\n"==s.charAt(s.length-1)?o:"")+"</"+t.toLowerCase()+">"}}else s+=o+"<"+t+">"+e.toString()+"</"+t+">";return s},o="";for(var s in e)o+=r(e[s],s.toString().toLowerCase(),"");return t?o.replace(/\t/g,t):o.replace(/\t|\n/g,"")},request:function(e,t,r,o){"string"!=typeof e&&(e=""),Array.isArray(t)||(t=[]),"string"!=typeof e&&(r="");let s="await worker.setRequest({"+(e=` method: '${e}',`)+(t=` args: ${JSON.stringify(t)},`)+(r=` id: '${r}' `)+"})\n";return null!=o?[s,o]:s},to:function(e,t,r,o,s){return t=Array.isArray(t)?t:[],s=Array.isArray(s)?s:[],function(a){let l=[],n=[];for(let e of t){let t="function"==typeof e.get?e.get:e=>e;null!=e.field?l.push(t(a.getFieldValue(e.field))):null!=e.input?l.push(t(Blockly.Gamepad.INPUTS[e.input])):null!=e.value&&l.push(t(e.value))}for(let e of s)n.push(Blockly.JavaScript.statementToCode(a,e));switch(o){case Blockly.Gamepad.TEMPLATES.WHILE:return"while("+Blockly.Gamepad.utils.request(e,l,a.id)+"){\n"+n[0]+"}";case Blockly.Gamepad.TEMPLATES.DO_WHILE:return"do{"+n[0]+"}while{\n"+Blockly.Gamepad.utils.request(e,l,a.id)+"}";case Blockly.Gamepad.TEMPLATES.IF:return"if("+Blockly.Gamepad.utils.request(e,l,a.id)+"){\n"+n[0]+"}";case Blockly.Gamepad.TEMPLATES.IF_ELSE:return"if("+Blockly.Gamepad.utils.request(e,l,a.id)+"){\n"+n[0]+"}else{"+n[1]+"}";default:return Blockly.Gamepad.utils.request(e,l,a.id,r)}}},code:function(e,t){return"async function f() {\n   try{\n"+(e=('      try{\n       await worker.setRequest({method: Blockly.Gamepad["STATES"]["STARTED"], id: "1"});\n'+e+'       await worker.setRequest({method: Blockly.Gamepad["STATES"]["FINISHED"]});\n}catch(error){ if(error == Blockly.Gamepad["STATES"]["COMPLETED"]) throw Blockly.Gamepad["STATES"]["COMPLETED"]; }').repeat(t))+'       worker.close();\n   }catch(err){ if(err != Blockly.Gamepad["STATES"]["COMPLETED"]) { throw err; }; }\n   };\nf();'},promiseWrapper:function(){let e,t=new Promise(t=>{e=t});var r=!0,o=!1;return t.isFulfilled=function(){return o},t.isPending=function(){return r},t.resolve=function(){r=!1,o=!0,e()},t},errorHandler:function(e){if(e!=Blockly.Gamepad.ERRORS.CLOSED)throw e},observeJson:function(e){if(!(!e||"object"!=typeof e||Blockly.Gamepad.observer.nonObservables.hasOwnProperty(e.constructor.name)||"observe"in e||"unobserve"in e||"revoke"in e)){return(Array.isArray(e)?new Blockly.Gamepad.observer.ArrayObserver({target:e,ownKey:null,parent:null}):new Blockly.Gamepad.observer.ObjectObserver({target:e,ownKey:null,parent:null})).proxy}if(!e||"object"!=typeof e)throw new Error("observable MAY ONLY be created from non-null object only");if("observe"in e||"unobserve"in e||"revoke"in e)throw new Error('target object MUST NOT have nor own neither inherited properties from the following list: "observe", "unobserve", "revoke"');if(Blockly.Gamepad.observer.nonObservables.hasOwnProperty(e.constructor.name))throw new Error(e+" found to be one of non-observable object types: "+Blockly.Gamepad.observer.nonObservables)}},Blockly.Gamepad.evalContext=function(code,worker){try{let CONTEXT=Blockly.Gamepad.CONTEXT;eval(code)}catch(e){console.error("eval error:",e,"code:",code)}},Blockly.Gamepad.History=class{constructor(){this.reset()}get length(){return this.history.length}add(e,t){this.history.splice(this.index+1),this.history.push(e),t&&(this.index=this.length-1)}get next(){if(this.index<this.length-1)return this.history[++this.index]}get prior(){if(this.index>-1)return this.history[--this.index]}get current(){if(this.index>-1)return this.history[this.index]}reset(){this.index=-1,this.history=[]}},Blockly.Gamepad.Queue=class{constructor(e){this.single=!0===e,this.requests=[],this.prequests=[],this.closed=!1,this.setWaiter()}setWaiter(){this.waiter=new Promise((e,t)=>{this.setted=(r=>r?r.close?e(!0):r.reset?t(Blockly.Gamepad.ERRORS.CLOSED):void e():e())}),this.waiter.then(()=>{},()=>{}),this.result=void 0}reset(){this.requests=[],this.prequests=[],this.closed=!1,this.setted({reset:!0}),this.setWaiter()}close(){this.closed=!0,this.setted({close:!0})}open(){this.closed=!1}get(){return this.closed?new Promise(e=>{e()}):null==this.result?this.result=new Promise(async(e,t)=>{this.waiter.then(t=>{if(t)return e();let r;r=1==this.prequests.length?this.prequests.shift():this.requests.shift(),this.setWaiter(),this.requests.length+this.prequests.length!=0&&this.setted(),e(r)},t)}):this.result}set(e,t){this.single?0==this.prequests.length&&(t?(this.prequests.push(e),this.setted()):0==this.requests.length&&(this.requests.push(e),this.setted())):(t?this.prequests.push(e):this.requests.push(e),this.requests.length+this.prequests.length==1&&this.setted())}},Blockly.Gamepad.Asynchronizer=class{constructor(e,t,r){this.properties=e||{},this.asyncProperties={},this.runnable=t||function(){},this.resetter=r||function(){},this.waiter=Blockly.Gamepad.utils.promiseWrapper(),this.waiter.resolve()}reset(){if(!this.waiter.isPending()){this.waiter=Blockly.Gamepad.utils.promiseWrapper();for(const e of Object.keys(this.asyncProperties))this.asyncProperties[e]=void 0;return this.asyncProperties[Blockly.Gamepad.SYMBOL]=!0,this.resetter.apply(this.properties,[...arguments])}}run(){if(this.waiter.isFulfilled())return;this.asyncProperties=new Proxy(Object.defineProperties(Object.assign({},this.properties),Object.getOwnPropertyDescriptors(this.properties)),{get:function(e,t){if(Object.getOwnPropertySymbols(e).includes(Blockly.Gamepad.SYMBOL))throw Blockly.Gamepad.ERRORS.CLOSED;return e[t]}});let e=this.runnable.apply(this.asyncProperties,[...arguments]);return e instanceof Promise?e.then(e=>(this.waiter.resolve(),e)):(this.waiter.resolve(),e)}},Blockly.Gamepad.Worker=function(){let e=new Blockly.Gamepad.Asynchronizer({history:new Blockly.Gamepad.History,queue:new Blockly.Gamepad.Queue,requests:new Blockly.Gamepad.Queue,isRunning:!1,go:function(e,t){return new Promise(r=>{this.queue.set({back:!0===e,resolve:r},!0===t)})},start:function(){this.isRunning||(this.isRunning=!0,this.queue.set({back:!1},!0))},stop:function(){this.isRunning=!1},setRequest:function(e){return new Promise((t,r)=>{this.requests.set({request:e,resolve:t,reject:r})})},close:function(){this.requests.close()}},function(){const e=()=>new Promise(async(e,t)=>{try{let r=this.history.current;this.history.prior,null!=r&&await this.manage(r,!0,!0),e()}catch(e){t(e)}}),t=()=>new Promise(async(e,t)=>{let r,o;try{if(void 0!==(r=this.history.next))return await this.manage(r,!1,!0),e();if(null==(r=await this.requests.get()))return this.stop(),e();if(this.history.current){if(this.history.current.method==Blockly.Gamepad.STATES.FINISHED&&r.request.method!=Blockly.Gamepad.STATES.STARTED)return r.reject(Blockly.Gamepad.STATES.FINISHED),e();if(this.history.current.method==Blockly.Gamepad.STATES.COMPLETED)return this.stop(),e()}null==(o=await this.manage(r.request,!1,!1))&&(o={}),this.history.add(r.request,!0),o.finished?(this.history.add({method:Blockly.Gamepad.STATES.FINISHED},!0),r.reject(Blockly.Gamepad.STATES.FINISHED)):o.completed?(this.history.add({method:Blockly.Gamepad.STATES.COMPLETED},!0),r.reject(Blockly.Gamepad.STATES.COMPLETED),this.close()):r.resolve(o.return),e()}catch(e){t(e)}});(async()=>{try{for(;;){let r=this.isRunning?{back:!1}:await this.queue.get();result=r&&r.back?await e():await t(),r.resolve&&r.resolve()}}catch(e){Blockly.Gamepad.utils.errorHandler(e)}})()},function(){this.queue.reset(),this.requests.reset(),this.history.reset()});Object.assign(this,{reset:function(){e.reset(),e.run()},onRequest:function(t,r){e.properties.manage=function(e,o,s){return r.apply(t,[e,o,s])}},getIstance:function(){return e.asyncProperties}});for(const t of["go","setRequest","start","stop","close"])this[t]=function(){let r=[...arguments],o=e.asyncProperties;try{return o[t].apply(o,r)}catch(e){Blockly.Gamepad.utils.errorHandler(e)}}},Blockly.Gamepad.BlocklyManager=class{constructor(e){e=e||{},this.isCoding=!1,this.start=!0===e.start,this.customHighlight="customHighlight"in e?!0===e.customHighlight:null,this.workspace=e.workspace||Blockly.getMainWorkspace(),this.workspace.addChangeListener(e=>{if(e.type==Blockly.Events.BLOCK_MOVE&&(this.isCoding||this.removeHighlight(),this.isCoding=!0),this.start&&e.type==Blockly.Events.BLOCK_DELETE){let e=this.workspace.getTopBlocks();for(let t of e)if(t.type==Blockly.Gamepad.BLOCKS.START)return;this.workspace.undo(!0)}})}code(e){this.isCoding=!1,this.start&&this.clear();let t=Blockly.JavaScript.workspaceToCode(this.workspace);return t=Blockly.Gamepad.utils.code(t,e)}clear(){let e=this.workspace.getTopBlocks();for(let t of e)t.type.includes("procedures_def")||this.start&&t.type==Blockly.Gamepad.BLOCKS.START||t.dispose(!1)}reset(){this.workspace.clear(),setTimeout(()=>{this.workspace.trashcan&&this.workspace.trashcan.clear()}),this.start&&(this.parentBlock=this.workspace.newBlock(Blockly.Gamepad.BLOCKS.START,"1"),this.parentBlock.setDeletable(!1),this.parentBlock.startHat_=!0,this.parentBlock.initSvg(),this.parentBlock.render(),this.parentBlock.setMovable(!1),this.parentBlock.moveBy(20,20))}toolbox(e){if(null==e)return;let t=JSON.parse(Blockly.Gamepad.TOOLBOX);if(e.blocks){!function t(r){let o=!1,s=!1;if("PROCEDURE"==r["@custom"])return!1!==e.procedure;if("VARIABLE"==r["@custom"])return!1!==e.variable;if(r.CATEGORY){let e;for(e=0;e<r.CATEGORY.length;e++)t(r.CATEGORY[e])||(r.CATEGORY.splice(e,1),e--);e>0&&(o=!0)}if(r.BLOCK){let t;for(t=0;t<r.BLOCK.length;t++)e.blocks.includes(r.BLOCK[t]["@type"])||(r.BLOCK.splice(t,1),t--);t>0&&(s=!0)}return o||s}(t.XML),this.workspace.updateToolbox(Blockly.Gamepad.utils.json2xml(t))}else e.all&&this.workspace.updateToolbox(Blockly.Gamepad.utils.json2xml(t))}setHighlight(e){if(null!==this.customHighlight&&!this.isCoding)if(this.customHighlight){this.removeHighlight();try{document.querySelector("[data-id='"+e+"']").classList.add("blocklySelected")}catch(e){}}else this.workspace.highlightBlock(e)}removeHighlight(){if(null!==this.customHighlight&&!this.isCoding)if(this.customHighlight){let e=document.getElementsByClassName("blocklySelected");for(let t=e.length;t>0;t--)e[t-1].classList.remove("blocklySelected")}else this.workspace.highlightBlock()}getBlocksNumber(){let e=this.workspace.getAllBlocks(),t={total:0};for(let r of e)null==t[r.type]&&(t[r.type]=0),t[r.type]++,t.total++;return t}save(e){if("undefined"!=typeof Storage){let t=Blockly.Xml.workspaceToDom(this.workspace);localStorage.setItem(e,Blockly.Xml.domToText(t))}}restore(e){if("undefined"!=typeof Storage){if(null!=localStorage.getItem(e)){this.workspace.clear();try{let t=Blockly.Xml.textToDom(localStorage.getItem(e));Blockly.Xml.domToWorkspace(t,this.workspace)}catch(e){this.reset()}}if(this.start){let e=this.workspace.getTopBlocks();for(let t of e)if(t.type==Blockly.Gamepad.BLOCKS.START)return;this.reset()}}this.workspace.trashcan&&this.workspace.trashcan.clear()}resize(){Blockly.svgResize(this.workspace)}},Blockly.Gamepad.JsonManager=class{constructor(e){this.init(e||{})}reset(){this.init()}init(e){void 0!==e&&(this.data=e),this.observers=[],this.index=0;let t=e=>{let t={json:Blockly.Gamepad.utils.observeJson(e),history:[],index:-1,changes:[]};this.observers.push(t),t.json.observe(e=>{e.forEach(e=>{"value"in e&&null!=e.value&&(e.value=JSON.parse(JSON.stringify(e.value))),"oldValue"in e&&null!=e.oldValue&&(e.oldValue=JSON.parse(JSON.stringify(e.oldValue))),t.changes.push(e)})})};if(Array.isArray(this.data))for(let e of this.data)t(e);else t(this.data)}get current(){return this.observers[this.index]}get json(){return this.current.json}get history(){return this.current.history}get changes(){return this.current.changes}set changes(e){this.current.changes=e}load(e){let t,r=this.json;for(t=0;t<e.length-1;t++)r=r[e[t]];return{path:e[t],obj:r}}commit(){this.history.splice(this.current.index+1),this.history.push(this.changes),this.current.index=this.history.length-1,this.changes=[]}loadChange(e){let{obj:t,path:r}=this.load(e.path,e.value);Array.isArray(t)?(e.type==Blockly.Gamepad.observer.INSERT&&(t.length>r?t.splice(r,0,e.value):t[r]=e.value),e.type==Blockly.Gamepad.observer.DELETE&&t.splice(r,1)):(e.type==Blockly.Gamepad.observer.INSERT&&(t[r]=e.value),e.type==Blockly.Gamepad.observer.DELETE&&delete t[r]),e.type==Blockly.Gamepad.observer.PUSH&&t[r].push.apply(t,e.value),e.type==Blockly.Gamepad.observer.POP&&t[r].pop(),e.type==Blockly.Gamepad.observer.UNSHIFT&&t[r].unshift.apply(t,e.value),e.type==Blockly.Gamepad.observer.SHIFT&&t[r].shift(),e.type==Blockly.Gamepad.observer.REVERSE&&t[r].reverse(),e.type==Blockly.Gamepad.observer.UPDATE&&(t[r]=e.value)}unloadChange(e){let{obj:t,path:r}=this.load(e.path,e.value);if(Array.isArray(t)?(e.type==Blockly.Gamepad.observer.INSERT&&(t.length>r?t.splice(r,1):delete t[r]),e.type==Blockly.Gamepad.observer.DELETE&&t.splice(r,0,e.oldValue)):(e.type==Blockly.Gamepad.observer.INSERT&&delete t[r],e.type==Blockly.Gamepad.observer.DELETE&&(t[r]=e.oldValue)),e.type==Blockly.Gamepad.observer.PUSH)for(let o=0;o<e.value.length;o++)t[r].pop();if(e.type==Blockly.Gamepad.observer.POP&&t[r].push(e.oldValue),e.type==Blockly.Gamepad.observer.UNSHIFT)for(let o=0;o<e.value.length;o++)t[r].shift();e.type==Blockly.Gamepad.observer.SHIFT&&t[r].unshift(e.oldValue),e.type==Blockly.Gamepad.observer.REVERSE&&t[r].reverse(),e.type==Blockly.Gamepad.observer.UPDATE&&(t[r]=e.oldValue)}loadChanges(){let e=this.changes.slice(0);for(;e.length>0;)this.unloadChange(e.pop());if(this.current.index<this.history.length-1){this.current.index++;let e=this.history[this.current.index],t=-1;for(;++t<e.length;)this.loadChange(e[t])}this.changes=[]}unloadChanges(){let e=this.changes.slice(0);for(;e.length>0;)this.unloadChange(e.pop());if(this.current.index>-1){let e=this.history[this.current.index],t=e.length;for(;--t>=0;)this.unloadChange(e[t]);this.current.index--}this.changes=[]}loadNext(){this.index<this.observers.length-1&&this.index++}loadPrior(){this.index>0&&this.index--}},Blockly.Gamepad.setting();